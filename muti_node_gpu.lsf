#!/bin/bash
#BSUB -q gpu-normal                                 # name of the queue gpu queue
#BSUB -gpu 'mode=exclusive_process:num=2:block=yes' # request for exclusive access to gpu per host
#BSUB -o logs/%J.out                                # output file
#BSUB -e logs/%J.err                                # error file
#BSUB -M 8G                                         # 8G RAM memory per host
#BSUB -R "select[mem>8G] rusage[mem=8G]"            # same as above
#BSUB -n 4                                          # number of cores in total
#BSUB -R "span[ptile=2]"                            # split 2 core per host

## This will request 2 hosts with 2 CPU, 2 GPU and 8GB RAM each
 
set -eo pipefail

module load cuda-12.1.1 

## Lightning will asume we use `jsrun`, but it was was developed by IBM for the Oak Ridge and Livermore Power systems. 
## The tool will execute a given program on resources allocated through the LSF batch scheduler. 
## Because we don't have it we need to use alternative options like to `mpirun` and `aprun` to get the same functionality.
## For this example we'll load the OpenMPI module to use `mpirun`

module load ISG/openmpi

export NCCL_DEBUG=INFO
# this is to disable infiniband to prevent annoying warnings/errors
export NCCL_IB_DISABLE=1
export UCX_IB_MLX5_DEVX=n


source /path/to/your/env/bin/activate
# or `conda activate yourenvironment`

# run the script with mpirun
mpirun --display-allocation python /path/to/multinode.py

echo "magic, have no clue but it works"
